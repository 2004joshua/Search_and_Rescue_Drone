# VRML_SIM R2023a utf8

EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/objects/backgrounds/protos/TexturedBackground.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/objects/backgrounds/protos/TexturedBackgroundLight.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/objects/road/protos/StraightRoadSegment.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/objects/floors/protos/Floor.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/appearances/protos/Grass.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023a/projects/objects/advertising_board/protos/AdvertisingBoard.proto"
EXTERNPROTO "../protos/Iris.proto"

WorldInfo {
  title "Iris Ardupilot"
  basicTimeStep 2
  FPS 20
}
Viewpoint {
  orientation 0.15554153350599548 -0.8879632385984604 -0.4328141844398555 5.514055516141922
  position -2.719806534182175 -0.9451744343683601 2.1727182111093915
  follow "Iris"
  followSmoothness 0.01
}
TexturedBackground {
}
TexturedBackgroundLight {
}
Floor {
  size 300 100
  appearance Grass {
  }
}
AdvertisingBoard {
  translation 13.1012 17.8267 0
  rotation 0 0 1 -1.469
  frontTexture [
    "../../../../../Tools/autotest/web-firmware/images/logo.png"
  ]
  backTexture [
    "../../../../../Tools/autotest/web-firmware/images/logo.png"
  ]
  displayWidth 16.28
  displayHeight 6
  poleNumber 2
  poleType "H-shape"
  poleHeight 10
}
StraightRoadSegment {
  translation -15 0.3 0.02
  rotation 0 0 1 0.105
  width 16.5
  rightBorder FALSE
  leftBorder FALSE
  length 140
}

Iris {
  translation 0 0 0.09
  controller "ardupilot_vehicle_controller"
  controllerArgs [
    "--motors"
    "m1_motor, m2_motor, m3_motor, m4_motor"
  ]
  children [
    GPS {                     
      referenceLatitude  -35.363696
      referenceLongitude 149.163653
    }
    Compass {
      name "compass"
    }
  ]
  extensionSlot [
    Receiver {
       name    "beacon_receiver"
       channel 1
     }
  ]
}

# add a new, world-fixed robot to broadcast the beacon
Robot {
  name        "Beacon"
  controller  "beacon_controller"       # or "beacon_controller.py"
  controllerArgs [ ]                # dummy args so it can reuse webots_vehicle.py
  translation 20 10 0.5
  children [
    Emitter {
      name     "beacon_emitter"
      type     "radio"
      channel  1
      range    30
      maxRange 30
      baudRate -1
      byteSize 8
      bufferSize   -1
    }
  ]
}